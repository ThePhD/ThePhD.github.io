# References



## Introduced to C++

- specifically to help with Operators
- give shape to existing C syntax for accessing arrays like `ptr[idx] = 5;`



## Handling it for C Operators

- Useful shortcut to say "I don't want to perform copies for arguments or results"
- Just takes a pointer rather than a value (and take a pointer for the result, too)



## Like So...

```cpp
typedef struct ml_vec2 {
	float x;
	float y;
} ml_vec2;

void ml_ref_vec2_add (ml_vec2* result, ml_vec2* left, ml_vec2* right);
_Operator(+, &, ml_vec2, ml_vec2, ml_ref_vec2_add);

int main () {
	ml_vec2 v1{1.0f, 2.0f};
	ml_vec2 v2{2.0f, 4.0f};
	ml_vec2 v3 = v1 + v2 + v2;
	return (int)v3.y;
}
```



## The Systems Underlying
## C++ Operator Overloading

- ðŸŽ¯ ~~Name/Argument-Dependent Lookup~~
- ðŸŽ¯ ~~Overload Resolution~~
- ðŸŽ¯ ~~Implicit Conversions~~
- ðŸŽ¯ ~~Destructors & Resource Acquisition Is Initialization (RAII)~~
- ðŸŽ¯ ~~References~~

